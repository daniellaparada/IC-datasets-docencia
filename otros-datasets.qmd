# Otros *datasets* {.unnumbered}

A continuación se referencian otros **dataset** incluidos en la librería `datosIC`, con su descripción, variables y fuente; y un detalle de posibles temas que podrían cubrir en aspectos de docencia.

| *Dataset*                                         | Temas                       |
|---------------------------------------------------|-----------------------------|
| [`bateria`](#bateria)       | Regresión                   |
| [`jugadores`](#jugadores)   | Estadística descriptiva     |
| [`nombresARG`](#nombresARG) | Estadística descriptiva     |
| [`viviendas`](#viviendas)   | Datos espaciales, regresión |
| [`xGFIFA22`](#xGFIFA22)     | Detección de atípicos       |

## Descripción, variables y fuente

```{r, message=FALSE, warning=FALSE, echo=FALSE, results='hide'}
require(devtools)
require(knitr)
require(tidyverse)
require(MetBrewer)
require(wordcloud2)
require(ggplot2)
require(plotly)
require(htmlwidgets) 
require(webshot)
devtools::install_github("daniellaparada/datosIC")
library(datosIC)
options(scipen=999)
```

------------------------------------------------------------------------

### `bateria`

-   **Descripción**: Datos del historial de capacidad de carga de una batería de Li-Ion L19M4PC2 con capacidad de fábrica de 80.000 mWh en una Notebook LENOVO 81YT con 505 ciclos de carga.

-   **Variables**:

    -   `desde`: fecha de inicio del período, en el formato año-mes-día.
    -   `hasta`: fecha de finalización del período, en el formato año-mes-día.
    -   `carga`: carga máxima alcanzada (mWh) durante el período.

-   **Fuente**: Reporte generado a partir de la instrucción `powercfg /batteryreport` en Windows 11.

Disponible en la librería `datosIC` bajo el nombre de `bateria`.

```{r, message=FALSE, warning=FALSE, echo=FALSE}
knitr::kable(bateria[1:10, ], caption = "Primeros 10 datos de 'bateria'.")
```

```{r, message=FALSE, warning=FALSE, echo=FALSE}
ggplotly(
  ggplot(data=bateria,aes(x=hasta,y=carga, key=carga)) +
    labs(x = "Fecha", y = "Carga máxima") +
    ylim(60000, 85000) + 
    geom_point(colour = "deeppink4") +
    theme_classic(),
  source = "select",
  tooltip = c("key")
)
```

![Ciclo de vida de baterías de Li-Ion. Tomado de *Simulation of capacity fade in lithium-ion batteries* (Spotnitz, 2003).](./ciclovidabateria.png){fig-align="center"}

------------------------------------------------------------------------

### `jugadores`

-   **Descripción**: Datos de jugadores de fútbol y directores técnicos de primera división de Argentina al 2023, que incluyen datos de nacimiento y altura. Datos procesados y puestos a disposición por Pablo Mislej para el DATATÓN llevado a cabo en 2023 en FCEyN UBA, a cargo de Mariela Sued y en colaboración con María Eugenia Szretter Noste.

-   **Variables**:

    -   `Equipo`: equipo en el que juega (o dirige) a la fecha.
    -   `Puesto`: posición en la que juega a la fecha. En el caso de director técnico, se indica acá.
    -   `Jugador`: nombre del jugador (o director técnico).
    -   `Edad`: edad del jugador (o director técnico) al 2023.
    -   `Nacimiento`: fecha de nacimiento del jugador (o director técnico), en el formato día-mes-año.
    -   `Altura`: altura (cm) del jugador (o director técnico).
    -   `Ciudad`: ciudad de nacimiento del jugador (o director técnico).
    -   `Pais`: país de nacimiento del jugador (o director técnico).
    -   `Mes`: mes de nacimiento del jugador (o director técnico).
    -   `Anio`: año de nacimiento del jugador (o director técnico).

-   **Fuente**: Adaptación de Pablo Mislej a partir de la información disponible [acá](www.promiedos.com.ar), 3 de mayo de 2023.

Disponible en la librería `datosIC` bajo el nombre de `jugadores`.

```{r, message=FALSE, warning=FALSE, echo=FALSE}
knitr::kable(jugadores[1:10, ], caption = "Primeros 10 datos de 'jugadores'.")
```

```{r, message=FALSE, warning=FALSE, echo=FALSE}
ggplotly(ggplot(jugadores %>%
                  drop_na() %>%
                  filter(Puesto != "DT")%>%
                  group_by(Mes) %>%
                  summarise(Total = n()), 
                aes(x=factor(Mes), y=Total,
                    key=Total)) + 
  geom_bar(fill="deeppink4",
           stat = "identity") +
  labs(x = "Mes de nacimiento", y = "Cantidad") +
  theme_classic(),
  source = "select",
  tooltip = c("key")
)
```

------------------------------------------------------------------------

### `nombresARG`

-   **Descripción**: Datos del histórico de nombres registrados ante el Registro Nacional de las Personas en Argentina desde 1922 y hasta 2015 agrupado por nombre y año, para nombres de más de 100 ocurrencias anuales. Se preprocesó la base de [datos.gob.ar](https://datos.gob.ar/dataset/otros-nombres-personas-fisicas/archivo/otros_2.1) excluyendo, entre otros, casos de múltiples nombres (especialmente, muy antiguos). La librería [guaguas](https://github.com/rivaquiroga/guaguas) contiene un dataset similar, pero para el caso chileno.

-   **Variables**:

    -   `nombre`: nombre registrado, en mayúsculas y sin tilde.
    -   `cantidad`: cantidad de nombres registrados en el año.
    -   `anio`: año de registro.

-   **Fuente**: [datos.gob.ar](https://datos.gob.ar/dataset/otros-nombres-personas-fisicas/archivo/otros_2.1)

Disponible en la librería `datosIC` bajo el nombre de `nombresARG`.

```{r, message=FALSE, warning=FALSE, echo=FALSE}
knitr::kable(nombresARG[1:10, ], caption = "Primeros 10 datos de 'nombresARG'.")
```

```{r, message=FALSE, warning=FALSE, echo=FALSE}
nomgrup <- nombresARG %>%
  group_by(nombre) %>%
  summarise(total = sum(cantidad)) %>%
  arrange(-total)

colors <- met.brewer("Benedictus")
c_trim <- c(
  rep(colors[1], 4),
  rep(colors[13], 4),
  rep(colors[2], 4),
  rep(colors[12], 4),
  rep(colors[3], 4),
  rep(colors[11], 4),
  rep(colors[4], 4),
  rep(colors[10], 4),
  rep(colors[5], 4),
  rep(colors[9], 4),
  rep(colors[6], 4),
  rep(colors[8], 4),
  rep("gray", nrow(nomgrup[1:100,]) - 48)
)

set.seed(1989)
hw <- wordcloud2(nomgrup[1:100,], color = c_trim, backgroundColor = "white", size=0.8)
saveWidget(hw,"1.html",selfcontained = F)
webshot::webshot("1.html","1.png",vwidth = 1000, vheight = 1000, delay =10)
```

------------------------------------------------------------------------

### `viviendas`

-   **Descripción**: Datos de viviendas en venta en Argentina, publicadas en el sitio inmobiliario online *Properati* durante los años 2013 a 2018. Los datos corresponden a viviendas publicadas a menos de 10 millones de dólares y con superficie total cubierta menor a 1000 metros cuadrados.

-   **Variables**:

    -   `tipo`: tipo de vivienda en venta.
    -   `ciudad`: ciudad, municipio (GBA) o barrio (CABA) de la vivienda.
    -   `provincia`: provincia (con distinción entre zonas de GBA y CABA).
    -   `lat`: latitud de la ubicación de la vivienda.
    -   `lon`: longitud de la ubicación de la vivienda.
    -   `precioUSD`: precio publicado (USD) de la vivienda en venta.
    -   `sup_tot`: superficie total (m2) de la vivienda.
    -   `sup_cub`: superficie cubierta (m2) de la vivienda.
    -   `precio_sup_tot`: precio (USD) del m2 según superficie total de la vivienda.
    -   `precio_sup_cub`: precio (USD) del m2 según superficie cubierta de la vivienda.
    -   `ambientes`: cantidad de ambientes de la vivienda reportados en la publicación.

-   **Fuente**: [Properati Data](https://blog.properati.com.ar/properati-data-informacion-abierta-y-actualizada-sobre-el-mercado-inmobiliario-2/)

Disponible en la librería `datosIC` bajo el nombre de `viviendas`.

```{r, message=FALSE, warning=FALSE, echo=FALSE}
knitr::kable(viviendas[1:10, c(1,2,6,7,9,11)], caption = "Primeros 10 datos de 'viviendas' para algunas variables.")
```

```{r, message=FALSE, warning=FALSE, echo=FALSE}
ggplotly(
  ggplot(data=viviendas %>% filter(ciudad=="Caballito"),aes(x=precioUSD,y=sup_cub, col=tipo, key=ambientes)) +
    labs(title= "Caballito (viviendas en venta 2013-2018)",x = "Precio (USD)", y = "Superficie total cubierta (m2)") +
    ylim(0, 400) +
    xlim(0, 1000000) +
    geom_point() +
    scale_color_manual(values = c("departamento" = "gray",
                                "casa"="deeppink4",
                                "PH"="dodgerblue4"))+
    theme_classic(),
  source = "select",
  tooltip = c("key")
)
```

------------------------------------------------------------------------

### `xGFIFA22`

-   **Descripción**: Datos resumen de goles esperados (xG) y de goles esperados asistidos (xGA) para los jugadores del mundial FIFA 2022. En la actualidad, xG es el mejor predictor del rendimiento futuro tanto para jugadores como para equipos. xG es una métrica que mide la probabilidad de que un tiro dado termine en gol. Según [StatsBomb](https://statsbomb.com/es/metricas-de-futbol/que-es-el-xg/), un modelo de xG utiliza información histórica de miles de tiros con características similares para estimar la probabilidad de gol en una escala de 0 a 1. Por ejemplo, un tiro con un valor de xG de 0,2 es uno que razonablemente se puede esperar que termine en gol dos de cada 10 veces. En el dataset, la columna de xG se construyó a partir de los datos de `statsBombR` filtrando todos los *shots* (tiros al arco) que no fueran penales, y sumando sus xG para cada uno de los jugadores. La métrica xGA se construye con una información adicional: la de los pases. De cada tiro al arco, se registra si proviene de un pase de asistencia. Luego, la variable xGA de este *dataset* se construyó a partir de filtrar todos los *shots* asistidos de los datos del mundial 2022 de `statsBombR` y sumar sus xG para cada uno de los jugadores.

-   **Variables**:

    -   `jugador`: nombre del jugador.
    -   `xG`: goles esperados (sin penales).
    -   `xGA`: goles esperados asistidos

-   **Fuente**: [StatsBombR](https://statsbomb.com/news/statsbomb-release-free-2022-world-cup-data/)

Disponible en la librería `datosIC` bajo el nombre de `xGFIFA22`.

```{r, message=FALSE, warning=FALSE, echo=FALSE}
knitr::kable(xGFIFA22[1:10, ], caption = "Primeros 10 datos de 'xGFIFA22'.")
```

El gráfico de xG vs XGA que reproducimos a partir de los datos de `xGFIFA22` puede verse en el *carrousel* de imágenes de StatsBomb, [acá](https://statsbomb.com/news/statsbomb-release-free-2022-world-cup-data/).

```{r, message=FALSE, warning=FALSE, echo=FALSE}
ggplotly(
  ggplot(data = xGFIFA22, aes(
    y = xGA,
    x = xG,
    label = jugador,
    key = jugador
  )) +
    geom_point(colour = "deeppink4") +
    labs(x = "Goles esperados (xG) sin penales", y = "Goles esperados asistidos (xGA)") +
    theme_classic() +
    geom_text(
      aes(xGA, xG, label = jugador, size = 4),
      data = xGFIFA22[xGFIFA22$jugador == "Lionel Andrés Messi Cuccittini", ],
      color = "#333333"
    ),
  source = "select",
  tooltip = c("key")
)
```

------------------------------------------------------------------------
